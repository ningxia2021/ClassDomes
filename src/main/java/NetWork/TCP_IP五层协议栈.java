package NetWork;

//2022.04.10
public class TCP_IP五层协议栈 {
    /**
     * 应用层
     * 程序员最常打交道的一层，其他四层都是操作系统、驱动、硬件实现好了的
     * 这一层最重要的就是【设计并实现应用层协议】 这是工作中经常要做的事情
     * 设计一个应用层协议 主要就是包含两个工作：
     * 1.明确传输的信息（根据需求） 2.明确数据的组织格式（json xml protobuffer HTTP）
     */

    /**
     * 传输层
     * 虽然传输层是操作系统内核实现的，我们不需要直接和传输层打交道，但是对于我们仍然意义重大
     * 进行网络编程都要用到Socket，调用了Socket就进入了传输层的范畴
     * 如果一切顺利就还好，一旦代码出现bug，为了解决和理解这些bug，传输层的一些知识就是必要的。
     * 传输层协议最常见的就是 UCP 和 TCP
     * UDP 报头包含4部分 ： 2个字节大小的源端口
     *                   2个字节大小的目的端口
     *                   2个字节大小的报文长度（致命缺陷 ：无法表示一个大于64K的数据报）
     *                   2个字节大小的校验和（校验和是用来验证网络传输的数据是否正确，但是不能保证100%对）
     * Tcp 协议格式： 16位源端口
     *              16位目的端口
     *              32位序号
     *              32位确认序号
     *              4位首部长度（表示报头长度，它是变长的，不像 UDP 是固定8字节；报头的长度为 首部实际长度*4）
     *              保留（6位）：现在还不用，为了未来升级留的空间
     *              6个标志位：TCP的核心
     *              16位窗口大小：
     *              16位校验和：
     *              16位紧急指针：
     *              选项：
     *              数据：
     *
     */

    /**
     * 网络层
     */

    /**
     * 数据链路层
     */
}
